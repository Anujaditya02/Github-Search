{"version":3,"sources":["logo.svg","components/UserCard.js","components/Repos.js","context/UserContext.js","pages/Home.js","pages/Signin.js","pages/Signup.js","pages/PageNotFound.js","layout/Footer.js","layout/Header.js","App.js","Config/firebaseConfig.js","serviceWorker.js","index.js"],"names":["module","exports","UserCard","user","Card","className","src","avatar_url","CardBody","name","location","bio","hireable","followers","Repos","repos_url","useState","repos","setRepos","fetchRepos","a","Axios","get","data","useEffect","ListGroup","map","repo","ListGroupItem","key","id","language","description","UserContext","createContext","Home","context","useContext","query","setQuery","setUser","fetchDetails","console","log","toast","type","uid","Container","Row","Col","md","InputGroup","Input","value","onChange","e","target","placeholder","InputGroupAddon","addonType","Button","onClick","color","to","Signin","email","setEmail","password","setPassword","lg","Form","onSubmit","preventDefault","firebase","auth","signInWithEmailAndPassword","then","res","catch","error","message","CardHeader","FormGroup","row","Label","for","sm","CardFooter","block","Signup","createUserWithEmailAndPassword","PageNotFound","Footer","fluid","tag","Header","isOpen","setIsOpen","Navbar","light","expand","NavbarBrand","NavbarText","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","Link","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","Provider","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7fddff8d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport {Card,CardBody} from 'reactstrap'\r\n\r\nconst UserCard = ({user}) => {\r\n   return(\r\n       <Card className=\"text-center mt-3 mb-4\">\r\n         <img src={user.avatar_url} className='img-thumbnail' />\r\n         <CardBody>\r\n          <div className=\"text-primary\">{user.name}</div>\r\n          <div className=\"text-primary\">{user.location}</div>\r\n          <div className=\"text-primary\">{user.bio}</div>\r\n          <div className=\"text-info\">\r\n           Available for hire:{user.hireable? \"YES\":\"NOPE\"}\r\n           </div>\r\n           <div className=\"text-info\">Followers {user.followers}</div>\r\n         </CardBody>\r\n       </Card>\r\n     \r\n   )\r\n}\r\n\r\nexport default UserCard;","import React,{useState,useEffect} from 'react';\r\nimport Axios from 'axios';\r\nimport {ListGroup,ListGroupItem} from 'reactstrap'\r\n\r\n\r\nconst Repos = ({repos_url}) => {\r\n   const [repos,setRepos] = useState([])\r\n\r\n   const fetchRepos = async() => {\r\n       const {data} = await Axios.get(repos_url);\r\n       setRepos(data)\r\n   }\r\n\r\n   useEffect(() => {\r\n       fetchRepos()\r\n   },[repos_url])\r\n\r\n   return(\r\n       <ListGroup>\r\n           {repos.map(repo => (\r\n               <ListGroupItem key={repo.id}>\r\n                   <div className=\"text-primary\">{repo.name}</div>\r\n                   <div className=\"text-secondary\">{repo.language}</div>\r\n                   <div className=\"text-info\">{repo.description}</div>\r\n               </ListGroupItem>\r\n           ))}\r\n       </ListGroup>\r\n   )\r\n}\r\n\r\nexport default Repos;","import {createContext} from 'react'\r\n\r\nexport const UserContext = createContext()\r\n","import React, { useState, useContext } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nimport {\r\n  Row,\r\n  Container,\r\n  Col,\r\n  Input,\r\n  Button,\r\n  InputGroup,\r\n  InputGroupAddon\r\n} from \"reactstrap\";\r\n\r\nimport UserCard from \"../components/UserCard\";\r\nimport Repos from \"../components/Repos\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { UserContext } from \"../context/UserContext\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Home = () => {\r\n   const context = useContext(UserContext);\r\n   const [query,setQuery] = useState('')\r\n   const [user,setUser] = useState(null);\r\n\r\n   const fetchDetails = async () => {\r\n       try {\r\n           const {data} = await Axios.get(`https://api.github.com/users/${query}`)\r\n           setUser(data)\r\n           console.log({data})\r\n       } catch (error) {\r\n           toast(\"Not able to locate user\", {type:\"error\"})\r\n       }\r\n   }\r\n\r\n   //Put Anypage behing login\r\n   if(!context.user?.uid) {\r\n       return <Redirect to=\"/signin\" />;\r\n   }\r\n\r\n   return (\r\n    <Container>\r\n      <Row className=\" mt-3\">\r\n        <Col md=\"5\">\r\n          <InputGroup>\r\n            <Input\r\n              type=\"text\"\r\n              value={query}\r\n              onChange ={e => setQuery(e.target.value)}\r\n              placeholder=\"Please provide the username\"\r\n            />\r\n            <InputGroupAddon addonType=\"append\">\r\n              <Button onClick={fetchDetails} color=\"primary\">Fetch User</Button>\r\n            </InputGroupAddon>\r\n          </InputGroup>\r\n          {user ? <UserCard user={user} />: null}\r\n        </Col>\r\n   <Col md=\"7\">{user? <Repos repos_url={user.repos_url}/>:null}</Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;","import React,{useState,useContext} from 'react';\r\nimport{\r\n  Container,\r\n  Form,\r\n  Button,\r\n  FormGroup,\r\n  Label,\r\n  Col,\r\n  Input,\r\n  Row,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n  CardHeader\r\n} from 'reactstrap';\r\n\r\nimport firebase from 'firebase/app';\r\nimport {UserContext} from '../context/UserContext';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {toast} from 'react-toastify';\r\n\r\nconst Signin = () => {\r\n    \r\n    const context = useContext(UserContext)\r\n\r\n    const [email,setEmail] = useState('')\r\n    const [password,setPassword] = useState('')\r\n\r\n    const handleSignUp = () => {\r\n        firebase\r\n          .auth()\r\n          .signInWithEmailAndPassword(email,password)\r\n          .then(res => {\r\n              console.log(res)\r\n              context.setUser({email: res.user.email, uid: res.user.uid})\r\n          })\r\n          .catch(error =>{\r\n              console.log(error)\r\n              toast(error.message,{\r\n                  type:\"error\"\r\n              })\r\n            })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        handleSignUp()\r\n    }\r\n    \r\n   if(context.user?.uid){\r\n       return <Redirect to='/' />\r\n   }\r\n   return (\r\n    <Container className=\"text-center\">\r\n      <Row>\r\n        <Col lg={6} className=\"offset-lg-3 mt-5\">\r\n          <Card>\r\n            <Form onSubmit={handleSubmit}>\r\n              <CardHeader className=\"\">Signin here</CardHeader>\r\n              <CardBody>\r\n                <FormGroup row>\r\n                  <Label for=\"email\" sm={3}>\r\n                    Email\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      id=\"email\"\r\n                      placeholder=\"provide your email\"\r\n                      value={email}\r\n                      onChange={e => setEmail(e.target.value)}\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label for=\"password\" sm={3}>\r\n                    Password\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      id=\"password\"\r\n                      placeholder=\"your password here\"\r\n                      value={password}\r\n                      onChange={e => setPassword(e.target.value)}\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n              </CardBody>\r\n              <CardFooter>\r\n                <Button type=\"submit\" block color=\"primary\">\r\n                  Sign In\r\n                </Button>\r\n              </CardFooter>\r\n            </Form>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n\r\n};\r\n\r\nexport default Signin;","import React,{useState,useContext} from 'react';\r\nimport{\r\n  Container,\r\n  Form,\r\n  Button,\r\n  FormGroup,\r\n  Label,\r\n  Col,\r\n  Input,\r\n  Row,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n  CardHeader\r\n} from 'reactstrap';\r\n\r\nimport firebase from 'firebase/app';\r\nimport {UserContext} from '../context/UserContext';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {toast} from 'react-toastify';\r\n\r\nconst Signup = () => {\r\n    \r\n    const context = useContext(UserContext)\r\n\r\n    const [email,setEmail] = useState('')\r\n    const [password,setPassword] = useState('')\r\n\r\n    const handleSignUp = () => {\r\n        firebase\r\n          .auth()\r\n          .createUserWithEmailAndPassword(email,password)\r\n          .then(res => {\r\n              console.log(res)\r\n              context.setUser({email: res.user.email, uid: res.user.uid})\r\n          })\r\n          .catch(error =>{\r\n              console.log(error)\r\n              toast(error.message,{\r\n                  type:\"error\"\r\n              })\r\n            })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        handleSignUp()\r\n    }\r\n    \r\n   if(context.user?.uid){\r\n       return <Redirect to='/' />\r\n   }\r\n   return (\r\n    <Container className=\"text-center\">\r\n      <Row>\r\n        <Col lg={6} className=\"offset-lg-3 mt-5\">\r\n          <Card>\r\n            <Form onSubmit={handleSubmit}>\r\n              <CardHeader className=\"\">Signup here</CardHeader>\r\n              <CardBody>\r\n                <FormGroup row>\r\n                  <Label for=\"email\" sm={3}>\r\n                    Email\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      id=\"email\"\r\n                      placeholder=\"provide your email\"\r\n                      value={email}\r\n                      onChange={e => setEmail(e.target.value)}\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label for=\"password\" sm={3}>\r\n                    Password\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      id=\"password\"\r\n                      placeholder=\"your password here\"\r\n                      value={password}\r\n                      onChange={e => setPassword(e.target.value)}\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n              </CardBody>\r\n              <CardFooter>\r\n                <Button type=\"submit\" block color=\"primary\">\r\n                  Sign Up\r\n                </Button>\r\n              </CardFooter>\r\n            </Form>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n\r\n};\r\n\r\nexport default Signup;","import React from 'react';\r\n\r\nconst PageNotFound = () => {\r\n    return(\r\n        <div>\r\n            <h1>PageNotFound</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PageNotFound;","import React from 'react';\r\nimport {Container} from 'reactstrap';\r\n\r\nconst Footer = () => {\r\n    return(\r\n        <Container fluid tag=\"footer\" className=\"text-center bg-info text-white text-uppercase fixed-bottom p-3\">\r\n            Github Search with Firebase\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React,{useState,useContext} from 'react';\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    NavbarText\r\n} from 'reactstrap';\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport {UserContext} from '../context/UserContext';\r\n\r\nconst Header = () => {\r\n   const  context = useContext(UserContext)\r\n\r\n   const [isOpen,setIsOpen] = useState(false)\r\n\r\n   const toggle = () => setIsOpen(!isOpen)\r\n\r\n   return(\r\n       <Navbar color=\"info\" light expand=\"md\">\r\n         <NavbarBrand>\r\n             <Link to=\"/\" className=\"text-white\">\r\n             Github User Search\r\n             </Link>\r\n         </NavbarBrand>\r\n         <NavbarText className=\"text-white\">\r\n             {context.user?.email ? context.user.email : \"\"}\r\n         </NavbarText>\r\n         <NavbarToggler onClick={toggle}/>\r\n         <Collapse isOpen={isOpen} navbar>\r\n         <Nav className=\"ml-auto\" navbar>\r\n             {\r\n                 context.user? (\r\n                 <NavItem>\r\n                    <NavLink onClick={() => {\r\n                        context.setUser(null);\r\n                    }} \r\n                    className=\"text-white\">\r\n                        LogOut\r\n                    </NavLink>\r\n                </NavItem>\r\n                ) : ( \r\n                <>\r\n                <NavItem>\r\n                 <NavLink tag={Link} to='/signup' className=\"text-white\">\r\n                     Signup\r\n                 </NavLink>\r\n                </NavItem>\r\n                 <NavItem>\r\n                 <NavLink tag={Link} to='/signin' className=\"text-white\">\r\n                     Signin\r\n                 </NavLink>\r\n                </NavItem>\r\n                </>\r\n             )\r\n             }\r\n        </Nav>\r\n         </Collapse>\r\n       </Navbar>\r\n   )\r\n}\r\n\r\nexport default Header;","import React,{useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport {BrowserRouter as Router,Switch,Route,Link} from 'react-router-dom';\n\nimport {ToastContainer} from 'react-toastify';\nimport \"react-toastify/dist/ReactToastify.min.css\";\n\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\n\n\n//components\nimport Home from './pages/Home';\nimport Signin from './pages/Signin';\nimport Signup from './pages/Signup';\nimport PageNotFound from './pages/PageNotFound';\nimport { UserContext } from './context/UserContext';\nimport Footer from './layout/Footer';\nimport Header from './layout/Header';\n\nimport firebaseConfig from './Config/firebaseConfig'\n\nfirebase.initializeApp(firebaseConfig)\n\n\n\n\nconst App = () => {\n\n  const [user,setUser] = useState(null)\n\n  return (\n    <Router>\n      <ToastContainer />\n      <UserContext.Provider value={{user,setUser}}>\n        <Header/>\n        <Switch>\n          <Route exact path='/' component={Home}/>\n          <Route exact path='/signin' component={Signin}/>\n          <Route exact path='/signup' component={Signup}/>\n          <Route exact path='*' component={PageNotFound}/>\n        </Switch>\n        <Footer />\n      </UserContext.Provider>\n    </Router>\n  );\n}\n\nexport default App;\n","export default {\r\n    apiKey: \"AIzaSyDDbs2bKnl7aaVWFsVx9PuWUAtEzOKf5V4\",\r\n    authDomain: \"mygitapp01.firebaseapp.com\",\r\n    databaseURL: \"https://mygitapp01.firebaseio.com\",\r\n    projectId: \"mygitapp01\",\r\n    storageBucket: \"mygitapp01.appspot.com\",\r\n    messagingSenderId: \"749859813654\",\r\n    appId: \"1:749859813654:web:8f94dfd36b3711b2bc3837\",\r\n    measurementId: \"G-SSF2Z9BZP6\"\r\n  };","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}